#! /bin/sh
### BEGIN INIT INFO
# Provides:          vfstpd
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: VSFTPD init script
# Description:       File created for starting VSFTPD manually
#                    installed on Ubuntu 12.04
### END INIT INFO

PATH=/usr/local/sbin:/sbin:/usr/sbin:/bin:/usr/bin
DESC="VSFTP Daemon"
NAME=vsftpd
DAEMON=/usr/local/sbin/$NAME
DAEMON_ARGS=" "
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

[ -x "$DAEMON" ] || exit 0
[ -r /etc/default/$NAME ] && . /etc/default/$NAME
. /lib/init/vars.sh
. /lib/lsb/init-functions

RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
NORMAL=$(tput sgr0)

col=80

do_start() {
  echo -n "* Starting vsftpd "
  $DAEMON & >/dev/null 2>&1
  if [ "$?" -eq "0" ]
  then
    printf '%*s[%s%s]\n' $col "$NORMAL" "OK" "$NORMAL"
    pidof $NAME > $PIDFILE
    return 0
  else
    printf '%*s[%s%s]\n' $col "$NORMAL" "${RED}fail" "$NORMAL"
    return 2
  fi
}

do_stop() {
  echo -n "* Stopping vsftpd "
  kill -KILL `cat $PIDFILE` >/dev/null 2>&1
  if [ "$?" -eq "0" ]
  then
    rm -f $PIDFILE
    printf '%*s[%s%s]\n' $col "$NORMAL" "OK" "$NORMAL"
    return 0
  else
    printf '%*s[%s%s]\n' $col "$NORMAL" "${RED}fail" "$NORMAL"
    return 2
  fi
}

do_status() {
  echo -n "* Service vsftpd is "
  pidof $NAME >/dev/null 2>&1
  if [ "$?" -eq "0" ]
  then
    echo "running"
    return 0
  else
    echo "not running"
    return 2
  fi
}

do_reload() {
  kill -HUP `cat $PIDFILE`
  return 0
}

case "$1" in
  start)
    [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
    do_start
    case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;
  stop)
    [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
    do_stop
    case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;
  status)
   do_status
   ;;
  restart|force-reload)
    log_daemon_msg "Restarting $DESC" "$NAME"
    do_stop
    case "$?" in
      0|1)
        do_start
        case "$?" in
          0) log_end_msg 0 ;;
          1) log_end_msg 1 ;; # Old process is still running
          *) log_end_msg 1 ;; # Failed to start
        esac
        ;;
      *)
        log_end_msg 1
        ;;
    esac
    ;;
  *)
  echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
  exit 3
  ;;
esac