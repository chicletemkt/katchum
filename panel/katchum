#!/usr/bin/env perl
use Mojolicious::Lite;
use Passwd::Unix;

# Instance
my $passwd = Passwd::Unix->new();

app->config(
  hypnotoad => {listen => ['http://*:2080']}
);

app->sessions->default_expiration(3600);
app->secret('TeENinx#*dj3892Ksq0a'); # Change

# Routes
get '/login' => sub {
  my $self = shift;

  delete $self->session->{current_user};

  $self->stash(
    url => $self->param('url') || ''
  );
} => 'login/index';

post '/login/authenticate' => sub {
  my $self = shift;
  my $users = ('root');

  foreach my $user ($users) {
    if ($self->param('username') eq $user) {
      if ($passwd->passwd($user) eq crypt($self->param('password'), $passwd->passwd($user))) {
        $self->session(
          current_user => $self->param('username')
        );
        $self->redirect_to($self->param('url') || '/');
        return;
      }
    }
  }

  $self->flash(type => 'danger', message => 'Oops! Wrong combination.');
  $self->redirect_to('/login');
};

under sub {
  my $self = shift;
  return 1 if $self->session->{current_user};

  $self->redirect_to('/login?url=' . $self->req->url);
  return;
};

get '/', 'index';

get '/server/information' => sub {
  my $self = shift;

  $self->stash(
    system_information => `uname -a` || undef,
    operational_system => `lsb_release -a` || undef,
    current_memory_usage => `free -m` || undef,
    current_disk_usage => `df -h` || undef
  );
} => 'server/information';

get '/users' => sub {
  my $self = shift;
  my @users = $passwd->users;
  my @usersSystem = ('root', 'daemon', 'bin', 'sys', 'sync', 'games', 'man', 'lp', 'mail', 'news', 'uucp', 'proxy', 'www-data', 'backup', 'list', 'irc', 'gnats', 'nobody', 'libuuid', 'syslog', 'messagebus', 'sshd', 'postfix', 'snmp', 'mysql', 'ftp');

  @users = grep{ not $_ ~~ @usersSystem } @users;

  $self->stash(
    users => \@users
  );
} => 'users/index';

any '/users/:username/password' => sub {
  my $self = shift;

  # TODO: Callback.
  $passwd->passwd($self->param('username'), $passwd->encpass($self->param('password')));
  $self->flash(type => 'success', message => 'Password changed successfully!');

  $self->redirect_to('/users');
};

app->start;